<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <title><%= title %></title>
  <link rel="stylesheet" href="/css/style.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
  <style>
    body {
      font-family: "Segoe UI","Noto Sans JP",sans-serif;
      background: #f5f7fa;
      margin: 0;
      padding: 0;
    }
    header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      background: #0078d4;
      color: white;
      padding: 15px 20px;
      font-size: 1.2em;
    }
    header img {
      width: 36px;
      height: 36px;
      cursor: pointer;
      border-radius: 6px;
      transition: .3s;
    }
    header img:hover {
      background: rgba(255,255,255,0.3);
    }
    main {
      max-width: 1000px;
      margin: auto;
      padding: 25px;
    }
    h2 {
      border-left: 5px solid #0078d4;
      padding-left: 10px;
      color: #0078d4;
    }
    form {
      background: #fff;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
      margin-bottom: 25px;
    }
    select, textarea, button, input[type="date"] {
      font-size: 1em;
      margin: 6px 0;
      padding: 8px;
      border-radius: 5px;
      border: 1px solid #ccc;
    }
    select, textarea, input[type="date"] {
      width: 100%;
    }
    button {
      background: #0078d4;
      color: #fff;
      border: none;
      padding: 8px 16px;
      border-radius: 5px;
      cursor: pointer;
      transition: .3s;
    }
    button:hover {
      background: #005fa3;
    }
    button:disabled {
      background: #999;
      cursor: not-allowed;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      background: white;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    }
    th, td {
      border: 1px solid #ddd;
      padding: 8px;
      text-align: center;
      white-space: nowrap;
    }
    th {
      background: #0078d4;
      color: white;
    }
    tr:nth-child(even) {
      background: #f9f9f9;
    }
    .status-read {
      color: green;
      font-weight: bold;
    }
    .status-unread {
      color: red;
      font-weight: bold;
    }
    /* トースト通知 */
    .toast {
      position: fixed;
      right: 20px;
      bottom: 20px;
      background: #333;
      color: #fff;
      padding: 12px 18px;
      border-radius: 8px;
      opacity: 0;
      transform: translateY(20px);
      transition: opacity 0.3s ease, transform 0.3s ease;
      z-index: 10000;
      font-size: 0.95em;
    }
    .toast.show {
      opacity: 1;
      transform: translateY(0);
    }
    @media (max-width:768px) {
      main { padding: 15px; }
      table { font-size: 0.9em; }
    }
  </style>
</head>
<body>
  <img id="school-logo" src="/images/school_logo.png" alt="School Logo" onclick="goHome()">
  <header>
    <h1>📘 生徒ページ（<%= student.name %> / <%= student.class_name %>）</h1>
    <img src="/images/logout.png" alt="logout" onclick="logout()">
  </header>

  <main>
    <% if (alertMessage) { %>
      <p id="alertMsg" style="display:none;"><%= alertMessage %></p>
    <% } %>

    <section>
      <h2>📝 提出フォーム（前登校日のみ）</h2>
      <%
        const todayStr = new Date(Date.now() + 9 * 60 * 60 * 1000).toISOString().slice(0, 10);
        const todayEntry = entries.find(e => e.date === todayStr);
        const isLocked = (todayEntry && todayEntry.is_read === 1);
      %>
      <% if (isLocked) { %>
        <div style="background:#ffe5e5;border:1px solid #ff9999;color:#c00;padding:12px;border-radius:8px;margin-bottom:15px;text-align:center;">
          ⚠️ 担任が確認済みのため、再提出・修正はできません。
        </div>
      <% } %>

      <form method="POST" action="/student">
        <input type="hidden" name="student_id" value="<%= student.id %>">
        <label>体調：</label>
        <select name="condition" <%= isLocked ? "disabled" : "" %> required>
          <option value="">選択</option>
          <option value="5" <%= todayEntry && todayEntry.condition == 5 ? "selected" : "" %>>🌈 とてもよい</option>
          <option value="4" <%= todayEntry && todayEntry.condition == 4 ? "selected" : "" %>>😊 よい</option>
          <option value="3" <%= todayEntry && todayEntry.condition == 3 ? "selected" : "" %>>😐 普通</option>
          <option value="2" <%= todayEntry && todayEntry.condition == 2 ? "selected" : "" %>>😞 少しわるい</option>
          <option value="1" <%= todayEntry && todayEntry.condition == 1 ? "selected" : "" %>>💤 かなりわるい</option>
        </select>

        <label>メンタル：</label>
        <select name="mental" <%= isLocked ? "disabled" : "" %> required>
          <option value="">選択</option>
          <option value="5" <%= todayEntry && todayEntry.mental == 5 ? "selected" : "" %>>💪 とても元気</option>
          <option value="4" <%= todayEntry && todayEntry.mental == 4 ? "selected" : "" %>>🙂 元気</option>
          <option value="3" <%= todayEntry && todayEntry.mental == 3 ? "selected" : "" %>>😌 普通</option>
          <option value="2" <%= todayEntry && todayEntry.mental == 2 ? "selected" : "" %>>😣 やや不調</option>
          <option value="1" <%= todayEntry && todayEntry.mental == 1 ? "selected" : "" %>>😭 かなり不調</option>
        </select>

        <label>今日の振り返り：</label>
        <textarea name="reflection" rows="3" placeholder="例：授業で〇〇を学んだ..." <%= isLocked ? "disabled" : "" %> required><%= todayEntry ? todayEntry.reflection : "" %></textarea>

        <label>相談欄（任意）：</label>
        <textarea name="consultation" rows="3" placeholder="悩み・相談など（担任のみ閲覧可）" <%= isLocked ? "disabled" : "" %>><%= todayEntry ? todayEntry.consultation : "" %></textarea>

        <button type="submit" <%= isLocked ? "disabled" : "" %>><%= todayEntry ? "修正を提出" : "提出" %></button>
      </form>
    </section>

    <section>
      <h2>📋 提出履歴</h2>
      <div style="margin-bottom:10px;">
        <label>期間：</label>
        <input type="date" id="filterFrom"> ～ 
        <input type="date" id="filterTo">
        <button onclick="filterByRange()">絞り込み</button>
        <button onclick="resetRange()">リセット</button>
        <button onclick="updateGraph()">📊 グラフ更新</button>
        <button onclick="exportToPDF('entryTable','student_entries')">🖨️ PDF出力</button>
        <button onclick="exportToCSV('entryTable','student_entries')">📄 CSV出力</button>
      </div>

      <table id="entryTable">
        <thead>
          <tr>
            <th>日付</th>
            <th>体調</th>
            <th>メンタル</th>
            <th>振り返り</th>
            <th>状態</th>
            <th>担任コメント</th>
          </tr>
        </thead>
        <tbody>
          <% if (entries && entries.length) { %>
            <% entries.forEach(e => { %>
              <tr data-date="<%= e.date %>" data-condition="<%= e.condition %>" data-mental="<%= e.mental %>">
                <td><%= e.date %></td>
                <td><%= e.condition ? e.condition : "-" %></td>
                <td><%= e.mental ? e.mental : "-" %></td>
                <td style="text-align:left;"><%= e.reflection || "" %></td>
                <td class="<%= e.is_read ? 'status-read' : 'status-unread' %>"><%= e.is_read ? "✅ 既読" : "⏰ 未読" %></td>
                <td style="text-align:left;"><%= e.teacher_comment || "-" %></td>
              </tr>
            <% }) %>
          <% } else { %>
            <tr><td colspan="6">まだ提出がありません。</td></tr>
          <% } %>
        </tbody>
      </table>

      <div style="margin-top:25px;">
        <h2>📈 期間内の平均（体調・メンタル）</h2>
        <canvas id="avgChart"></canvas>
      </div>
    </section>
  </main>

  <div id="toast" class="toast"></div>

  <script>
window.logout=function(){
  if(confirm("ログアウトしますか？")){
    sessionStorage.clear();
    window.location.href="/logout";
  }
};

window.exportToCSV=function(tableId,filename){
  const table=document.getElementById(tableId);
  if(!table)return alert("出力対象が見つかりません");
  const rows=[...table.querySelectorAll("tr")];
  const csv=rows.map(r=>[...r.children].map(c=>`"${(c.innerText||"").replace(/\r?\n/g," ").replace(/"/g,'""')}"`).join(",")).join("\r\n");
  const bom=new Uint8Array([0xEF,0xBB,0xBF]);
  const blob=new Blob([bom,csv],{type:"text/csv;charset=utf-8;"});
  const link=document.createElement("a");
  link.href=URL.createObjectURL(blob);
  link.download=filename+".csv";
  link.click();
};

window.exportToPDF=function(elementId,filename){
  const element=document.getElementById(elementId);
  if(!element)return alert("出力対象が見つかりません");
  const tbody=element.querySelector("tbody");
  if(tbody&&tbody.children.length===0){
    tbody.innerHTML="<tr><td colspan='6' style='text-align:center;color:#555;'>出力できるデータがありません。</td></tr>";
  }
  const clone=element.cloneNode(true);
  clone.style.margin="0 auto";
  clone.style.display="table";
  clone.style.borderCollapse="collapse";
  clone.style.backgroundColor="#fff";
  const wrapper=document.createElement("div");
  wrapper.style.width="100%";
  wrapper.style.textAlign="center";
  wrapper.style.paddingTop="40px";
  wrapper.style.backgroundColor="#fff";
  wrapper.appendChild(clone);
  document.body.appendChild(wrapper);
  window.scrollTo(0,0);
  const opt={
    margin:[20,20,20,20],
    filename:filename+".pdf",
    image:{type:"jpeg",quality:1},
    html2canvas:{scale:2,useCORS:true,backgroundColor:"#ffffff"},
    jsPDF:{unit:"mm",format:"a4",orientation:"portrait"},
    pagebreak:{mode:["avoid-all"]}
  };
  setTimeout(()=>{
    html2pdf().set(opt).from(wrapper).save().then(()=>wrapper.remove())
    .catch(err=>{console.error("PDF出力エラー:",err);alert("PDF出力に失敗しました。");wrapper.remove();});
  },400);
};

window.filterByRange=function(){
  const from=document.getElementById("filterFrom").value;
  const to=document.getElementById("filterTo").value;
  document.querySelectorAll("#entryTable tbody tr").forEach(r=>{
    const date=r.dataset.date;
    let show=true;
    if(from&&date<from)show=false;
    if(to&&date>to)show=false;
    r.style.display=show?"":"none";
  });
};

window.resetRange=function(){
  document.getElementById("filterFrom").value="";
  document.getElementById("filterTo").value="";
  document.querySelectorAll("#entryTable tbody tr").forEach(r=>r.style.display="");
  updateGraph();
};

let chart;
window.updateGraph=function(){
  const from=document.getElementById("filterFrom").value;
  const to=document.getElementById("filterTo").value;
  const rows=[...document.querySelectorAll("#entryTable tbody tr")];
  const filtered=rows.filter(r=>{
    const d=r.dataset.date;
    if(!d)return false;
    if(from&&d<from)return false;
    if(to&&d>to)return false;
    return true;
  }).map(r=>({condition:Number(r.dataset.condition)||0,mental:Number(r.dataset.mental)||0}));
  const avgCondition=filtered.length?(filtered.reduce((s,e)=>s+e.condition,0)/filtered.length).toFixed(2):0;
  const avgMental=filtered.length?(filtered.reduce((s,e)=>s+e.mental,0)/filtered.length).toFixed(2):0;
  const ctx=document.getElementById("avgChart").getContext("2d");
  if(chart)chart.destroy();
  chart=new Chart(ctx,{
    type:"bar",
    data:{labels:["体調","メンタル"],datasets:[{label:"平均スコア",data:[avgCondition,avgMental],backgroundColor:["#4e79a7","#f28e2b"]}]},
    options:{scales:{y:{beginAtZero:true,max:5,ticks:{stepSize:1}}},plugins:{legend:{display:false}}}
  });
};

function goHome(){
  const path=window.location.pathname;
  if(path.includes("admin"))location.href="/admin";
  else if(path.includes("teacher"))location.href="/teacher";
  else if(path.includes("student"))location.href="/student";
  else location.href="/";
}

/* ✅ 日本語対応トースト通知 */
function showToast(message,type="success"){
  const toast=document.getElementById("toast");
  if(!toast)return;
  toast.textContent=message;
  toast.style.background=type==="error"?"#c62828":"#2e7d32"; // 成功→緑, 失敗→赤
  toast.classList.add("show");
  setTimeout(()=>toast.classList.remove("show"),2500);
}

document.addEventListener("DOMContentLoaded",()=>{
  updateGraph();
  const msg=document.getElementById("alertMsg");
  if(msg&&msg.textContent.trim()){
    let text=msg.textContent.trim();
    if(text.toLowerCase().includes("success")) text="✅ 提出が完了しました";
    if(text.toLowerCase().includes("error")) text="⚠️ 提出に失敗しました";
    showToast(text);
  }
});
</script>
</body>
</html>
